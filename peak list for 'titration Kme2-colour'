# File names - collect filenames 
fname=["C:/Users/User/Desktop/NMR/500/AS-6-50B-500/1/pdata/1", 
       "C:/Users/User/Desktop/NMR/500/AS-6-50B-500/2/pdata/1",
       "C:/Users/User/Desktop/NMR/500/AS-6-50B-500/3/pdata/1", 
       "C:/Users/User/Desktop/NMR/500/AS-6-50B-500/4/pdata/1"]

# Plot colours
colors_list = ['black','black','black','black'] 

# Plot limits 
# NOTE- goes higher to lower because origin on NMR axis is reversed
limit_x = [4.5,1.0]

# Plot offsets - if uncertain, turn axis for each plot 'on' and check the axis ticks
# Has to be the same number as the files in 'fname'
offset_y = [0,5e11,1e12,1.5e12]

# Plot scale up (1 for default scale) - gets multiplies with the 1D data to increase scale
# Has to be the same number as the files in 'fname'
scale_y = [30,30,30,30]

# Range of x-scale (ppm) and colour each sub array is for one file... the middle two are values in the tuple are used
# find the x,y coordinate to paint.
range_xppm = [[(2.81,2.70),(3.17,3.10), (3.96,3.70), (3.06,2.97)],
              [(2.39,2.19),(2.78,2.65), (3.97,3.80), (2.81,2.65)],
              [(1.85,1.77),(2.42,2.18), (4.06,3.96), (2.54,2.40)],
              [(1.55,1.36),(2.03,1.85), (0.00,0.00), (2.40,2.19)]]

range_color =[['lightcoral', 'lightsteelblue', 'darkorange', 'pink'],
              ['lightcoral', 'lightsteelblue', 'darkorange', 'pink'],
              ['lightcoral', 'lightsteelblue', 'darkorange', 'pink'],
              ['lightcoral', 'lightsteelblue', 'darkorange', 'pink']]

# This is to insert a dummy peak. (to show peaks overlapping or tailing off). 
# Keep it zero if not needed. (like [0,0,0,0] 
# Goto if c_y!=0 to see how it is used. 
# There are 3 ways to add peak: either extrapolate ('ex') or insert a gaussian ('gau') or lorentzian ('lor') peak
# ('gau' ,6,.25) insert a gaussina peak where 6 detemines width and 0.25 determines height
# ('lor' ,0.16,.25) insert a gaussina peak where 0.16 detemines width and 0.25 determines height
# ('e',(2.88,3.3),0) extrapolates to LEFT using an exponential function. 2.88 determines the point of 
# extrapolation and 3.3 determines the slope
# ('e',0,(2.30,3.5)) extrapolates to RIGHT using an exponential function. 2.88 determines the point of 
# extrapolation and 3.3 determines the slope
# ('e',(2.13,3.6),(1.95,3.6)) extrapolates to BOTH sides RIGHT using exponential function, where: 
# 2.13 determines the point of extrapolation and 3.6 determines the slope on LEFT side
# 1.95 determines the point of extrapolation and 3.6 determines the slope on LEFT side
dum_y = [[0, 0, 0, 0],
         [('gau' ,6 ,0.58), ('ex',(2.85,3.3),0), ('ex',(4.02,3.3),0), ('gau' ,8,.15)],
         [('ex',(1.90,3.6),(1.70,3.6)), ('gau' ,8,.14), ('gau' ,5,.06), 0],
         [('gau' ,4.0 ,0.08), ('gau' ,6,.08), 0, ('gau' ,6,.08)]]

